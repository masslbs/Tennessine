# SPDX-FileCopyrightText: 2024 Mass Labs
#
# SPDX-License-Identifier: MIT

name: test

on: [push]

jobs:
  browser-tests:
    timeout-minutes: 15
    runs-on: [self-hosted, linux]

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          path: Tennessine

      # not needed on self-hosted but kept around if we want to use it on github-hosted
      #- name: Install Nix
      #  uses: DeterminateSystems/nix-installer-action@main
      #- uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/flake-checker-action@main
        with:
          flake-lock-path: Tennessine/packages/client/flake.lock

      - name: Start local testnet
        run: |
          nix develop -c local-testnet -D -L logs/process-compose.log
        working-directory: Tennessine/

      - name: Run tests
        run: nix develop -c bash -c "deno test -A --no-check --fail-fast --trace-leaks ./packages/frontend/src/hooks/useRelayEndpoint_test.ts"
        working-directory: Tennessine/

      - name: Shut down local testnet
        run: nix develop -c local-testnet down
        working-directory: Tennessine/

      - name: build frontend
        run: nix develop -c bash -c "deno run production"
        working-directory: Tennessine/packages/frontend

      - name: Upload frontend to IPFS
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '/' '-')
          COMMIT_SHA="${{ github.event.pull_request.head.sha || github.sha }}"
          COMMIT_SHA_SHORT="${COMMIT_SHA:0:7}"
          ipfs-cluster-ctl add -r -n $REPO_NAME-$COMMIT_SHA_SHORT --cid-version 1 ./dist > ipfs-cluster-add.log
          cid=$(egrep -o 'added (.*)' ipfs-cluster-add.log | cut -d ' ' -f2 | tail -n 1)
          echo "CID=$cid" >> $GITHUB_ENV

          echo "Build Available as:" >> $GITHUB_STEP_SUMMARY
          echo "https://$cid.ipfs.inbrowser.link" >> $GITHUB_STEP_SUMMARY
          echo "https://$cid.ipfs.dweb.link" >> $GITHUB_STEP_SUMMARY

        working-directory: Tennessine/packages/frontend

      - name: Set ENS contenthash
        if: ${{ github.ref == 'refs/heads/release/mainnet' }}
        working-directory: Tennessine/packages/frontend
        run: |
          BLUMEN_PK=${{ secrets.BLUMEN_PK }} nix run --impure nixpkgs#deno -- run -A npm:blumen ens $CID shop.mass.eth --safe eth:0xec3DFB875fa5FdDe4916BEDdeB012Ef67a2f229F
        env:
          CID: ${{ env.CID }}

      - name: Upload frontend build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build.zip
          path: Tennessine/packages/frontend/dist

      - name: Upload service compose log on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: process-compose-log.txt
          path: Tennessine/logs/
