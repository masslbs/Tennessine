/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root.tsx'

// Create Virtual Routes

const ShippingLazyImport = createFileRoute('/shipping')()
const ShareLazyImport = createFileRoute('/share')()
const PrivacyPolicyLazyImport = createFileRoute('/privacy-policy')()
const PayLazyImport = createFileRoute('/pay')()
const MyShopsLazyImport = createFileRoute('/my-shops')()
const ListingsLazyImport = createFileRoute('/listings')()
const ListingDetailLazyImport = createFileRoute('/listing-detail')()
const CreateShopLazyImport = createFileRoute('/create-shop')()
const CookieNoticeLazyImport = createFileRoute('/cookie-notice')()
const ContactLazyImport = createFileRoute('/contact')()
const CartLazyImport = createFileRoute('/cart')()
const IndexLazyImport = createFileRoute('/')()
const MerchantsIndexLazyImport = createFileRoute('/merchants/')()
const MerchantsShopSettingsLazyImport = createFileRoute(
  '/merchants/shop-settings',
)()
const MerchantsOrdersLazyImport = createFileRoute('/merchants/orders')()
const MerchantsOrderDetailsLazyImport = createFileRoute(
  '/merchants/order-details',
)()
const MerchantsListingsLazyImport = createFileRoute('/merchants/listings')()
const MerchantsListingDetailLazyImport = createFileRoute(
  '/merchants/listing-detail',
)()
const MerchantsEditListingLazyImport = createFileRoute(
  '/merchants/edit-listing',
)()

// Create/Update Routes

const ShippingLazyRoute = ShippingLazyImport.update({
  id: '/shipping',
  path: '/shipping',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shipping.lazy.tsx').then((d) => d.Route))

const ShareLazyRoute = ShareLazyImport.update({
  id: '/share',
  path: '/share',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/share.lazy.tsx').then((d) => d.Route))

const PrivacyPolicyLazyRoute = PrivacyPolicyLazyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/privacy-policy.lazy.tsx').then((d) => d.Route),
)

const PayLazyRoute = PayLazyImport.update({
  id: '/pay',
  path: '/pay',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pay.lazy.tsx').then((d) => d.Route))

const MyShopsLazyRoute = MyShopsLazyImport.update({
  id: '/my-shops',
  path: '/my-shops',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/my-shops.lazy.tsx').then((d) => d.Route))

const ListingsLazyRoute = ListingsLazyImport.update({
  id: '/listings',
  path: '/listings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/listings.lazy.tsx').then((d) => d.Route))

const ListingDetailLazyRoute = ListingDetailLazyImport.update({
  id: '/listing-detail',
  path: '/listing-detail',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/listing-detail.lazy.tsx').then((d) => d.Route),
)

const CreateShopLazyRoute = CreateShopLazyImport.update({
  id: '/create-shop',
  path: '/create-shop',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/create-shop.lazy.tsx').then((d) => d.Route),
)

const CookieNoticeLazyRoute = CookieNoticeLazyImport.update({
  id: '/cookie-notice',
  path: '/cookie-notice',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/cookie-notice.lazy.tsx').then((d) => d.Route),
)

const ContactLazyRoute = ContactLazyImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy.tsx').then((d) => d.Route))

const CartLazyRoute = CartLazyImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/cart.lazy.tsx').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy.tsx').then((d) => d.Route))

const MerchantsIndexLazyRoute = MerchantsIndexLazyImport.update({
  id: '/merchants/',
  path: '/merchants/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/merchants/index.lazy.tsx').then((d) => d.Route),
)

const MerchantsShopSettingsLazyRoute = MerchantsShopSettingsLazyImport.update({
  id: '/merchants/shop-settings',
  path: '/merchants/shop-settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/merchants/shop-settings.lazy.tsx').then((d) => d.Route),
)

const MerchantsOrdersLazyRoute = MerchantsOrdersLazyImport.update({
  id: '/merchants/orders',
  path: '/merchants/orders',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/merchants/orders.lazy.tsx').then((d) => d.Route),
)

const MerchantsOrderDetailsLazyRoute = MerchantsOrderDetailsLazyImport.update({
  id: '/merchants/order-details',
  path: '/merchants/order-details',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/merchants/order-details.lazy.tsx').then((d) => d.Route),
)

const MerchantsListingsLazyRoute = MerchantsListingsLazyImport.update({
  id: '/merchants/listings',
  path: '/merchants/listings',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/merchants/listings.lazy.tsx').then((d) => d.Route),
)

const MerchantsListingDetailLazyRoute = MerchantsListingDetailLazyImport.update(
  {
    id: '/merchants/listing-detail',
    path: '/merchants/listing-detail',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/merchants/listing-detail.lazy.tsx').then((d) => d.Route),
)

const MerchantsEditListingLazyRoute = MerchantsEditListingLazyImport.update({
  id: '/merchants/edit-listing',
  path: '/merchants/edit-listing',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/merchants/edit-listing.lazy.tsx').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/cookie-notice': {
      id: '/cookie-notice'
      path: '/cookie-notice'
      fullPath: '/cookie-notice'
      preLoaderRoute: typeof CookieNoticeLazyImport
      parentRoute: typeof rootRoute
    }
    '/create-shop': {
      id: '/create-shop'
      path: '/create-shop'
      fullPath: '/create-shop'
      preLoaderRoute: typeof CreateShopLazyImport
      parentRoute: typeof rootRoute
    }
    '/listing-detail': {
      id: '/listing-detail'
      path: '/listing-detail'
      fullPath: '/listing-detail'
      preLoaderRoute: typeof ListingDetailLazyImport
      parentRoute: typeof rootRoute
    }
    '/listings': {
      id: '/listings'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof ListingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/my-shops': {
      id: '/my-shops'
      path: '/my-shops'
      fullPath: '/my-shops'
      preLoaderRoute: typeof MyShopsLazyImport
      parentRoute: typeof rootRoute
    }
    '/pay': {
      id: '/pay'
      path: '/pay'
      fullPath: '/pay'
      preLoaderRoute: typeof PayLazyImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyLazyImport
      parentRoute: typeof rootRoute
    }
    '/share': {
      id: '/share'
      path: '/share'
      fullPath: '/share'
      preLoaderRoute: typeof ShareLazyImport
      parentRoute: typeof rootRoute
    }
    '/shipping': {
      id: '/shipping'
      path: '/shipping'
      fullPath: '/shipping'
      preLoaderRoute: typeof ShippingLazyImport
      parentRoute: typeof rootRoute
    }
    '/merchants/edit-listing': {
      id: '/merchants/edit-listing'
      path: '/merchants/edit-listing'
      fullPath: '/merchants/edit-listing'
      preLoaderRoute: typeof MerchantsEditListingLazyImport
      parentRoute: typeof rootRoute
    }
    '/merchants/listing-detail': {
      id: '/merchants/listing-detail'
      path: '/merchants/listing-detail'
      fullPath: '/merchants/listing-detail'
      preLoaderRoute: typeof MerchantsListingDetailLazyImport
      parentRoute: typeof rootRoute
    }
    '/merchants/listings': {
      id: '/merchants/listings'
      path: '/merchants/listings'
      fullPath: '/merchants/listings'
      preLoaderRoute: typeof MerchantsListingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/merchants/order-details': {
      id: '/merchants/order-details'
      path: '/merchants/order-details'
      fullPath: '/merchants/order-details'
      preLoaderRoute: typeof MerchantsOrderDetailsLazyImport
      parentRoute: typeof rootRoute
    }
    '/merchants/orders': {
      id: '/merchants/orders'
      path: '/merchants/orders'
      fullPath: '/merchants/orders'
      preLoaderRoute: typeof MerchantsOrdersLazyImport
      parentRoute: typeof rootRoute
    }
    '/merchants/shop-settings': {
      id: '/merchants/shop-settings'
      path: '/merchants/shop-settings'
      fullPath: '/merchants/shop-settings'
      preLoaderRoute: typeof MerchantsShopSettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/merchants/': {
      id: '/merchants/'
      path: '/merchants'
      fullPath: '/merchants'
      preLoaderRoute: typeof MerchantsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/cart': typeof CartLazyRoute
  '/contact': typeof ContactLazyRoute
  '/cookie-notice': typeof CookieNoticeLazyRoute
  '/create-shop': typeof CreateShopLazyRoute
  '/listing-detail': typeof ListingDetailLazyRoute
  '/listings': typeof ListingsLazyRoute
  '/my-shops': typeof MyShopsLazyRoute
  '/pay': typeof PayLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/share': typeof ShareLazyRoute
  '/shipping': typeof ShippingLazyRoute
  '/merchants/edit-listing': typeof MerchantsEditListingLazyRoute
  '/merchants/listing-detail': typeof MerchantsListingDetailLazyRoute
  '/merchants/listings': typeof MerchantsListingsLazyRoute
  '/merchants/order-details': typeof MerchantsOrderDetailsLazyRoute
  '/merchants/orders': typeof MerchantsOrdersLazyRoute
  '/merchants/shop-settings': typeof MerchantsShopSettingsLazyRoute
  '/merchants': typeof MerchantsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/cart': typeof CartLazyRoute
  '/contact': typeof ContactLazyRoute
  '/cookie-notice': typeof CookieNoticeLazyRoute
  '/create-shop': typeof CreateShopLazyRoute
  '/listing-detail': typeof ListingDetailLazyRoute
  '/listings': typeof ListingsLazyRoute
  '/my-shops': typeof MyShopsLazyRoute
  '/pay': typeof PayLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/share': typeof ShareLazyRoute
  '/shipping': typeof ShippingLazyRoute
  '/merchants/edit-listing': typeof MerchantsEditListingLazyRoute
  '/merchants/listing-detail': typeof MerchantsListingDetailLazyRoute
  '/merchants/listings': typeof MerchantsListingsLazyRoute
  '/merchants/order-details': typeof MerchantsOrderDetailsLazyRoute
  '/merchants/orders': typeof MerchantsOrdersLazyRoute
  '/merchants/shop-settings': typeof MerchantsShopSettingsLazyRoute
  '/merchants': typeof MerchantsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/cart': typeof CartLazyRoute
  '/contact': typeof ContactLazyRoute
  '/cookie-notice': typeof CookieNoticeLazyRoute
  '/create-shop': typeof CreateShopLazyRoute
  '/listing-detail': typeof ListingDetailLazyRoute
  '/listings': typeof ListingsLazyRoute
  '/my-shops': typeof MyShopsLazyRoute
  '/pay': typeof PayLazyRoute
  '/privacy-policy': typeof PrivacyPolicyLazyRoute
  '/share': typeof ShareLazyRoute
  '/shipping': typeof ShippingLazyRoute
  '/merchants/edit-listing': typeof MerchantsEditListingLazyRoute
  '/merchants/listing-detail': typeof MerchantsListingDetailLazyRoute
  '/merchants/listings': typeof MerchantsListingsLazyRoute
  '/merchants/order-details': typeof MerchantsOrderDetailsLazyRoute
  '/merchants/orders': typeof MerchantsOrdersLazyRoute
  '/merchants/shop-settings': typeof MerchantsShopSettingsLazyRoute
  '/merchants/': typeof MerchantsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cart'
    | '/contact'
    | '/cookie-notice'
    | '/create-shop'
    | '/listing-detail'
    | '/listings'
    | '/my-shops'
    | '/pay'
    | '/privacy-policy'
    | '/share'
    | '/shipping'
    | '/merchants/edit-listing'
    | '/merchants/listing-detail'
    | '/merchants/listings'
    | '/merchants/order-details'
    | '/merchants/orders'
    | '/merchants/shop-settings'
    | '/merchants'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cart'
    | '/contact'
    | '/cookie-notice'
    | '/create-shop'
    | '/listing-detail'
    | '/listings'
    | '/my-shops'
    | '/pay'
    | '/privacy-policy'
    | '/share'
    | '/shipping'
    | '/merchants/edit-listing'
    | '/merchants/listing-detail'
    | '/merchants/listings'
    | '/merchants/order-details'
    | '/merchants/orders'
    | '/merchants/shop-settings'
    | '/merchants'
  id:
    | '__root__'
    | '/'
    | '/cart'
    | '/contact'
    | '/cookie-notice'
    | '/create-shop'
    | '/listing-detail'
    | '/listings'
    | '/my-shops'
    | '/pay'
    | '/privacy-policy'
    | '/share'
    | '/shipping'
    | '/merchants/edit-listing'
    | '/merchants/listing-detail'
    | '/merchants/listings'
    | '/merchants/order-details'
    | '/merchants/orders'
    | '/merchants/shop-settings'
    | '/merchants/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CartLazyRoute: typeof CartLazyRoute
  ContactLazyRoute: typeof ContactLazyRoute
  CookieNoticeLazyRoute: typeof CookieNoticeLazyRoute
  CreateShopLazyRoute: typeof CreateShopLazyRoute
  ListingDetailLazyRoute: typeof ListingDetailLazyRoute
  ListingsLazyRoute: typeof ListingsLazyRoute
  MyShopsLazyRoute: typeof MyShopsLazyRoute
  PayLazyRoute: typeof PayLazyRoute
  PrivacyPolicyLazyRoute: typeof PrivacyPolicyLazyRoute
  ShareLazyRoute: typeof ShareLazyRoute
  ShippingLazyRoute: typeof ShippingLazyRoute
  MerchantsEditListingLazyRoute: typeof MerchantsEditListingLazyRoute
  MerchantsListingDetailLazyRoute: typeof MerchantsListingDetailLazyRoute
  MerchantsListingsLazyRoute: typeof MerchantsListingsLazyRoute
  MerchantsOrderDetailsLazyRoute: typeof MerchantsOrderDetailsLazyRoute
  MerchantsOrdersLazyRoute: typeof MerchantsOrdersLazyRoute
  MerchantsShopSettingsLazyRoute: typeof MerchantsShopSettingsLazyRoute
  MerchantsIndexLazyRoute: typeof MerchantsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CartLazyRoute: CartLazyRoute,
  ContactLazyRoute: ContactLazyRoute,
  CookieNoticeLazyRoute: CookieNoticeLazyRoute,
  CreateShopLazyRoute: CreateShopLazyRoute,
  ListingDetailLazyRoute: ListingDetailLazyRoute,
  ListingsLazyRoute: ListingsLazyRoute,
  MyShopsLazyRoute: MyShopsLazyRoute,
  PayLazyRoute: PayLazyRoute,
  PrivacyPolicyLazyRoute: PrivacyPolicyLazyRoute,
  ShareLazyRoute: ShareLazyRoute,
  ShippingLazyRoute: ShippingLazyRoute,
  MerchantsEditListingLazyRoute: MerchantsEditListingLazyRoute,
  MerchantsListingDetailLazyRoute: MerchantsListingDetailLazyRoute,
  MerchantsListingsLazyRoute: MerchantsListingsLazyRoute,
  MerchantsOrderDetailsLazyRoute: MerchantsOrderDetailsLazyRoute,
  MerchantsOrdersLazyRoute: MerchantsOrdersLazyRoute,
  MerchantsShopSettingsLazyRoute: MerchantsShopSettingsLazyRoute,
  MerchantsIndexLazyRoute: MerchantsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cart",
        "/contact",
        "/cookie-notice",
        "/create-shop",
        "/listing-detail",
        "/listings",
        "/my-shops",
        "/pay",
        "/privacy-policy",
        "/share",
        "/shipping",
        "/merchants/edit-listing",
        "/merchants/listing-detail",
        "/merchants/listings",
        "/merchants/order-details",
        "/merchants/orders",
        "/merchants/shop-settings",
        "/merchants/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/cart": {
      "filePath": "cart.lazy.tsx"
    },
    "/contact": {
      "filePath": "contact.lazy.tsx"
    },
    "/cookie-notice": {
      "filePath": "cookie-notice.lazy.tsx"
    },
    "/create-shop": {
      "filePath": "create-shop.lazy.tsx"
    },
    "/listing-detail": {
      "filePath": "listing-detail.lazy.tsx"
    },
    "/listings": {
      "filePath": "listings.lazy.tsx"
    },
    "/my-shops": {
      "filePath": "my-shops.lazy.tsx"
    },
    "/pay": {
      "filePath": "pay.lazy.tsx"
    },
    "/privacy-policy": {
      "filePath": "privacy-policy.lazy.tsx"
    },
    "/share": {
      "filePath": "share.lazy.tsx"
    },
    "/shipping": {
      "filePath": "shipping.lazy.tsx"
    },
    "/merchants/edit-listing": {
      "filePath": "merchants/edit-listing.lazy.tsx"
    },
    "/merchants/listing-detail": {
      "filePath": "merchants/listing-detail.lazy.tsx"
    },
    "/merchants/listings": {
      "filePath": "merchants/listings.lazy.tsx"
    },
    "/merchants/order-details": {
      "filePath": "merchants/order-details.lazy.tsx"
    },
    "/merchants/orders": {
      "filePath": "merchants/orders.lazy.tsx"
    },
    "/merchants/shop-settings": {
      "filePath": "merchants/shop-settings.lazy.tsx"
    },
    "/merchants/": {
      "filePath": "merchants/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
