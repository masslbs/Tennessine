/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root.tsx";

// Create Virtual Routes

const ProductsLazyImport = createFileRoute("/products")();
const ProductDetailLazyImport = createFileRoute("/product-detail")();
const MerchantDashboardLazyImport = createFileRoute("/merchant-dashboard")();
const ListingsLazyImport = createFileRoute("/listings")();
const ListingDetailLazyImport = createFileRoute("/listing-detail")();
const EditListingLazyImport = createFileRoute("/edit-listing")();
const CreateShopLazyImport = createFileRoute("/create-shop")();
const IndexLazyImport = createFileRoute("/")();

// Create/Update Routes

const ProductsLazyRoute = ProductsLazyImport.update({
  id: "/products",
  path: "/products",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/products.lazy.tsx").then((d) => d.Route));

const ProductDetailLazyRoute = ProductDetailLazyImport.update({
  id: "/product-detail",
  path: "/product-detail",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/product-detail.lazy.tsx").then((d) => d.Route)
);

const MerchantDashboardLazyRoute = MerchantDashboardLazyImport.update({
  id: "/merchant-dashboard",
  path: "/merchant-dashboard",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/merchant-dashboard.lazy.tsx").then((d) => d.Route)
);

const ListingsLazyRoute = ListingsLazyImport.update({
  id: "/listings",
  path: "/listings",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/listings.lazy.tsx").then((d) => d.Route));

const ListingDetailLazyRoute = ListingDetailLazyImport.update({
  id: "/listing-detail",
  path: "/listing-detail",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/listing-detail.lazy.tsx").then((d) => d.Route)
);

const EditListingLazyRoute = EditListingLazyImport.update({
  id: "/edit-listing",
  path: "/edit-listing",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/edit-listing.lazy.tsx").then((d) => d.Route)
);

const CreateShopLazyRoute = CreateShopLazyImport.update({
  id: "/create-shop",
  path: "/create-shop",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/create-shop.lazy.tsx").then((d) => d.Route)
);

const IndexLazyRoute = IndexLazyImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/index.lazy.tsx").then((d) => d.Route));

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/create-shop": {
      id: "/create-shop";
      path: "/create-shop";
      fullPath: "/create-shop";
      preLoaderRoute: typeof CreateShopLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/edit-listing": {
      id: "/edit-listing";
      path: "/edit-listing";
      fullPath: "/edit-listing";
      preLoaderRoute: typeof EditListingLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/listing-detail": {
      id: "/listing-detail";
      path: "/listing-detail";
      fullPath: "/listing-detail";
      preLoaderRoute: typeof ListingDetailLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/listings": {
      id: "/listings";
      path: "/listings";
      fullPath: "/listings";
      preLoaderRoute: typeof ListingsLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/merchant-dashboard": {
      id: "/merchant-dashboard";
      path: "/merchant-dashboard";
      fullPath: "/merchant-dashboard";
      preLoaderRoute: typeof MerchantDashboardLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/product-detail": {
      id: "/product-detail";
      path: "/product-detail";
      fullPath: "/product-detail";
      preLoaderRoute: typeof ProductDetailLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/products": {
      id: "/products";
      path: "/products";
      fullPath: "/products";
      preLoaderRoute: typeof ProductsLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexLazyRoute;
  "/create-shop": typeof CreateShopLazyRoute;
  "/edit-listing": typeof EditListingLazyRoute;
  "/listing-detail": typeof ListingDetailLazyRoute;
  "/listings": typeof ListingsLazyRoute;
  "/merchant-dashboard": typeof MerchantDashboardLazyRoute;
  "/product-detail": typeof ProductDetailLazyRoute;
  "/products": typeof ProductsLazyRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexLazyRoute;
  "/create-shop": typeof CreateShopLazyRoute;
  "/edit-listing": typeof EditListingLazyRoute;
  "/listing-detail": typeof ListingDetailLazyRoute;
  "/listings": typeof ListingsLazyRoute;
  "/merchant-dashboard": typeof MerchantDashboardLazyRoute;
  "/product-detail": typeof ProductDetailLazyRoute;
  "/products": typeof ProductsLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexLazyRoute;
  "/create-shop": typeof CreateShopLazyRoute;
  "/edit-listing": typeof EditListingLazyRoute;
  "/listing-detail": typeof ListingDetailLazyRoute;
  "/listings": typeof ListingsLazyRoute;
  "/merchant-dashboard": typeof MerchantDashboardLazyRoute;
  "/product-detail": typeof ProductDetailLazyRoute;
  "/products": typeof ProductsLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/create-shop"
    | "/edit-listing"
    | "/listing-detail"
    | "/listings"
    | "/merchant-dashboard";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/create-shop"
    | "/edit-listing"
    | "/listing-detail"
    | "/listings"
    | "/merchant-dashboard";
  id:
    | "__root__"
    | "/"
    | "/create-shop"
    | "/edit-listing"
    | "/listing-detail"
    | "/listings"
    | "/merchant-dashboard";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  CreateShopLazyRoute: typeof CreateShopLazyRoute;
  EditListingLazyRoute: typeof EditListingLazyRoute;
  ListingDetailLazyRoute: typeof ListingDetailLazyRoute;
  ListingsLazyRoute: typeof ListingsLazyRoute;
  MerchantDashboardLazyRoute: typeof MerchantDashboardLazyRoute;
  ProductDetailLazyRoute: typeof ProductDetailLazyRoute;
  ProductsLazyRoute: typeof ProductsLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CreateShopLazyRoute: CreateShopLazyRoute,
  EditListingLazyRoute: EditListingLazyRoute,
  ListingDetailLazyRoute: ListingDetailLazyRoute,
  ListingsLazyRoute: ListingsLazyRoute,
  MerchantDashboardLazyRoute: MerchantDashboardLazyRoute,
  ProductDetailLazyRoute: ProductDetailLazyRoute,
  ProductsLazyRoute: ProductsLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-shop",
        "/edit-listing",
        "/listing-detail",
        "/listings",
        "/merchant-dashboard"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/create-shop": {
      "filePath": "create-shop.lazy.tsx"
    },
    "/edit-listing": {
      "filePath": "edit-listing.lazy.tsx"
    },
    "/listing-detail": {
      "filePath": "listing-detail.lazy.tsx"
    },
    "/listings": {
      "filePath": "listings.lazy.tsx"
    },
    "/merchant-dashboard": {
      "filePath": "merchant-dashboard.lazy.tsx"
    },
    "/product-detail": {
      "filePath": "product-detail.lazy.tsx"
    },
    "/products": {
      "filePath": "products.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
